services:
  product-db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: product_db
    volumes:
      - product_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order_db
    volumes:
      - order_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  admin-db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: admin_db
    volumes:
      - admin_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  product-service:
    build: ./product-service
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@product-db:5432/product_db
    depends_on:
      product-db:
        condition: service_healthy
    ports:
      - "8001:8000"

  order-service:
    build: ./order-service
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@order-db:5432/order_db
      PRODUCT_SERVICE_URL: http://product-service:8000
    depends_on:
      order-db:
        condition: service_healthy
      product-service:
        condition: service_started
    ports:
      - "8002:8000"

  admin-service:
    build: ./admin-service
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@admin-db:5432/admin_db
    depends_on:
      admin-db:
        condition: service_healthy
    ports:
      - "8003:8000"

volumes:
  product_data:
  order_data:
  admin_data:
